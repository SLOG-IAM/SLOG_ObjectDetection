{"version":3,"sources":["Components/Basicbar.js","Components/RadialChart.js","index.js"],"names":["Basicbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","options","chart","id","xaxis","categories","series","name","data","react_default","a","createElement","className","react_apexcharts_min_default","type","width","Component","RadialChart","labels","radialBar","dataLabels","fontSize","value","total","show","label","formatter","w","height","React","App","videoRef","createRef","canvasRef","detectFrame","video","model","detect","then","predictions","renderPredictions","requestAnimationFrame","ctx","current","getContext","clearRect","canvas","font","textBaseline","forEach","prediction","x","bbox","y","strokeStyle","lineWidth","strokeRect","fillStyle","textWidth","measureText","class","textHeight","parseInt","fillRect","fillText","_this2","navigator","mediaDevices","getUserMedia","webCamPromise","audio","facingMode","stream","window","srcObject","Promise","resolve","reject","onloadedmetadata","modelPromise","cocoSsd","all","values","catch","error","console","autoPlay","playsInline","muted","ref","Components_Basicbar","Components_RadialChart","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.68c67c7f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass Basicbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      options: {\r\n        chart: {\r\n          id: \"basic-bar\"\r\n        },\r\n        xaxis: {\r\n          categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999]\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: \"series-1\",\r\n          data: [30, 40, 45, 50, 49, 60, 70, 91]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"row\">\r\n          <div className=\"mixed-chart\">\r\n            <Chart\r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type=\"bar\"\r\n              width=\"500\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Basicbar;","import React, { Component } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\n\r\nclass RadialChart extends React.Component {\r\n      \r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      options: {\r\n        labels: ['Apples', 'Oranges', 'Bananas', 'Berries'],\r\n        radialBar: {\r\n          dataLabels: {\r\n            name: {\r\n              fontSize: '22px',\r\n            },\r\n            value: {\r\n              fontSize: '16px',\r\n            },\r\n            total: {\r\n              show: true,\r\n              label: 'Total',\r\n              formatter: function (w) {\r\n                // By default this function returns the average of all series. The below is just an example to show the use of custom formatter function\r\n                return 249\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      series: [44, 55, 67, 83],\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"chart\">\r\n          <Chart options={this.state.options} series={this.state.series} type=\"radialBar\" height=\"350\" />\r\n        </div>\r\n        <div id=\"html-dist\">\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RadialChart;","import React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport * as cocoSsd from \"@tensorflow-models/coco-ssd\";\nimport \"@tensorflow/tfjs\";\nimport \"./styles.css\";\nimport {ApexCharts, ReactApexChart} from 'apexcharts';\nimport Chart from \"react-apexcharts\";\nimport Basicbar from \"./Components/Basicbar\";\nimport RadialChart from \"./Components/RadialChart\";\n\n\nclass App extends React.Component {\n  videoRef = React.createRef();\n  canvasRef = React.createRef();\n\n  \n  componentDidMount() {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      const webCamPromise = navigator.mediaDevices\n        .getUserMedia({\n          audio: false,\n          video: {\n            facingMode: \"user\"\n          }\n        })\n        .then(stream => {\n          window.stream = stream;\n          this.videoRef.current.srcObject = stream;\n          return new Promise((resolve, reject) => {\n            this.videoRef.current.onloadedmetadata = () => {\n              resolve();\n            };\n          });\n        });\n      const modelPromise = cocoSsd.load();\n      Promise.all([modelPromise, webCamPromise])\n        .then(values => {\n          this.detectFrame(this.videoRef.current, values[0]);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  }\n\n  detectFrame = (video, model) => {\n    model.detect(video).then(predictions => {\n      this.renderPredictions(predictions);\n      requestAnimationFrame(() => {\n        this.detectFrame(video, model);\n      });\n    });\n  };\n\n  renderPredictions = predictions => {\n    const ctx = this.canvasRef.current.getContext(\"2d\");\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    // Font options.\n    const font = \"16px sans-serif\";\n    ctx.font = font;\n    ctx.textBaseline = \"top\";\n    predictions.forEach(prediction => {\n      const x = prediction.bbox[0];\n      const y = prediction.bbox[1];\n      const width = prediction.bbox[2];\n      const height = prediction.bbox[3];\n      // Draw the bounding box.\n      ctx.strokeStyle = \"#00FFFF\";\n      ctx.lineWidth = 4;\n      ctx.strokeRect(x, y, width, height);\n      // Draw the label background.\n      ctx.fillStyle = \"#00FFFF\";\n      const textWidth = ctx.measureText(prediction.class).width;\n      const textHeight = parseInt(font, 10); // base 10\n      ctx.fillRect(x, y, textWidth + 4, textHeight + 4);\n    });\n\n    predictions.forEach(prediction => {\n      const x = prediction.bbox[0];\n      const y = prediction.bbox[1];\n      // Draw the text last to ensure it's on top.\n      ctx.fillStyle = \"#000000\";\n      ctx.fillText(prediction.class, x, y);\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <text>Study LOG!!!</text>\n        <video\n          className=\"size\"\n          autoPlay\n          playsInline\n          muted\n          ref={this.videoRef}\n          width=\"600\"\n          height=\"500\"\n        />\n        <canvas\n          className=\"size\"\n          ref={this.canvasRef}\n          width=\"600\"\n          height=\"500\"\n        />\n        <Basicbar/>\n        <RadialChart/>\n      </div>\n    );\n  }\n}\n\n\n\n\n// const domContainer = document.querySelector('#app');\n// ReactDOM.render(React.createElement(RadialChart), domContainer);\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}